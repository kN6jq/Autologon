package pkg

import (
	"fmt"
	"gopkg.in/yaml.v2"
	"io/ioutil"
	"os"
)

type AutoGenerated struct {
	TargetURL         string   `yaml:"target_url"`
	BrowserPath       string   `yaml:"browser_path"`
	Headless          bool     `yaml:"headless"`
	Captchaon         bool     `yaml:"captchaon"`
	CaptchaServerurl  string   `yaml:"captcha_serverurl"`
	UserinputXpath    string   `yaml:"userinput_xpath"`
	PassinputXpath    string   `yaml:"passinput_xpath"`
	CaptchainputXpath string   `yaml:"captchainput_xpath"`
	CaptchaimgXpath   string   `yaml:"captchaimg_xpath"`
	LoginbuttonXpath  string   `yaml:"loginbutton_xpath"`
	BodyExcludeRegex  []string `yaml:"body_exclude_regex"`
	TimeintervalMs    int      `yaml:"timeinterval_ms"`
	Proxy             string   `yaml:"proxy"`
}

var Config = ReadConfig()

func ReadConfig() AutoGenerated {
	// 读取 YAML 文件
	content, err := ioutil.ReadFile(GetConfileFile())
	if err != nil {
		panic(err)
	}
	// 解析 YAML 文件到结构体
	var config AutoGenerated
	err = yaml.Unmarshal(content, &config)
	if err != nil {
		fmt.Println("解析配置文件失败,请检查格式")
		os.Exit(0)
	}
	return config
}
